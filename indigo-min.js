/* @preserve
* Indigo v1.0.1 - 2020-01-08
* (c) 2020 David Trujillo, (c) 2020 Geeksme
* Licensed MIT, GPL
*/

!function(t,e){"function"==typeof define&&define.amd?define(e):"object"==typeof exports?module.exports=e():t.Indigo=e()}(this,function(){return function(t){function e(){return this.notifyChar=null,this.writeReadChar=null,this.device=null,this.bluetooth=navigator.bluetooth,this.events={},this.notifyFns=null,this}return e.EVENT_DISCONNECTED="disconnected",e.prototype.getDeviceConnected=function(t){return this.device=this.bluetooth.referringDevice,this.device},e.prototype.isAvailable=function(t){return this.bluetooth.getAvailability()},e.prototype.addEventListener=function(t,e){"object"!=typeof this.events[t]&&(this.events[t]=[]),this.events[t].push(e)},e.prototype.removeEventListener=function(t,e){var n;"object"==typeof this.events[t]&&(n=indexOf(this.events[t],e))>-1&&this.events[t].splice(n,1)},e.prototype.dispatchEvent=function(t){var e,n,i,o=[].slice.call(arguments,1);if("object"==typeof this.events[t])for(i=(n=this.events[t].slice()).length,e=0;e<i;e++)n[e].apply(this,o)},e.prototype.requestDevice=function(t){var e={filters:[{namePrefix:"[]",services:[65520]}],optionalServices:[65520]};for(var n in t)e.filters.push({namePrefix:t[n]});return this.bluetooth.requestDevice(e).then(function(t){return t})},e.prototype.requestAndConnectDevice=function(t,e=null){var n=this;return n.requestDevice(t).then(t=>(null!=e&&e(),n.connect(t).then(t=>t)))},e.prototype.connect=function(t){var e=this;return t.addEventListener("gattserverdisconnected",function(){e.notifyChar=null,e.writeReadChar=null,e.device=null,e.eventDisconnected()}),this.gattConnect(t).then(function(t){if(console.log("found "+t.length+" characteristic(s)"),e.notifyChar=t.find(function(t){return"0000fff7-0000-1000-8000-00805f9b34fb"===t.uuid}),e.writeReadChar=t.find(function(t){return"0000fff6-0000-1000-8000-00805f9b34fb"===t.uuid}),e.notifyChar&&e.writeReadChar,!e.notifyChar||!e.writeReadChar)throw new Error("Unsupported device");if(!e.notifyChar.properties.notify)throw new Error("Control characteristic does not allow notifications");return e.notifyChar.startNotifications()}).then(function(){return e.notifyChar.addEventListener("characteristicvaluechanged",e.handleNotification.bind(e)),console.log("enabled control notifications"),e.device=t,t})},e.prototype.gattConnect=function(t){return Promise.resolve().then(function(){return t.gatt.connected?t.gatt:t.gatt.connect()}).then(function(t){return console.log("connected to gatt server"),t.getPrimaryService(65520)}).then(function(t){return console.log("found DFU service"+t.getCharacteristics()),t.getCharacteristics()})},e.prototype.handleNotification=function(t){for(var e=t.target.value,n=e.byteLength,i=[],o=0;o<n;o++){var r=e.getUint8(o);i.push(r)}null!=this.notifyFns&&(this.notifyFns(i),this.notifyFns=null),console.log("Indigo response: "+i)},e.prototype.eventDisconnected=function(){this.dispatchEvent(e.EVENT_DISCONNECTED,null)},e.prototype.write=function(t){var e=new Uint8Array(20);e.set(t),this.writeReadChar.writeValue(e)},e.prototype.write=function(t,e){this.notifyFns=t;var n=new Uint8Array(20);n.set(e),this.writeReadChar.writeValue(n)},e.prototype.disconnect=function(){console.log("Device disconnected"),this.device.gatt.disconnect(),this.notifyChar=null,this.writeReadChar=null,this.device=null},e}()});
